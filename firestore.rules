rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    match /users/{userID} {
      // Allow users to read and write their own data
      allow read, write: if request.auth != null && request.auth.uid == userID;
      
      // Allow admin operations and webhook updates
      allow write: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
         request.resource.data.keys().hasAny(['subscriptionStatus', 'stripeSubscriptionId', 'plan']));
    }
    
    // Referrals collection - allow users to create and read their own referral records
    match /referrals/{userID} {
      // Allow users to create and read their own referral data
      allow read, write: if request.auth != null && request.auth.uid == userID;
      
      // Allow admin operations and server-side updates
      allow write: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
         request.resource.data.keys().hasAny(['paymentCompleted', 'emailSent', 'paymentCompletedAt', 'emailSentAt', 'subscriptionId', 'stripeCustomerId']));
    }
  }
}